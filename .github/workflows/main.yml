name: Main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

env:
  plenary-git: https://github.com/nvim-lua/plenary.nvim
  plenary-path: ~/.local/share/nvim/site/pack/vendor/start/plenary.nvim
  sqlite-git: https://github.com/kkharji/sqlite.lua
  sqlite-path: ~/.local/share/nvim/site/pack/vendor/start/sqlite.lua
  runtime: ~/.local/share/nvim/site/pack/vendor/start

jobs:
  checks:
    name: ${{ matrix.task.name }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        task:
          - name: Test
            run: |
              make test

          - name: Lint
            prepare: |
              sudo luarocks install luacheck
            run: |
              make lint

        include:
          - os: ubuntu-latest
            nvim_url: https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz
            packages: sqlite3 libsqlite3-dev luarocks
            manager: sudo apt-get

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - run: date +%F > todays-date

      - name: Restore cache for today's nightly
        uses: actions/cache@v3
        with:
          path: |
            _neovim
          key: ${{ runner.os }}-${{ hashFiles('todays-date') }}

      - name: Install packages
        if: ${{ matrix.packages }}
        run: ${{ matrix.manager }} install ${{ matrix.packages }}

      - name: Install neovim
        run: |
          mkdir -p ${{ env.runtime }}
          test -d _neovim || {
            mkdir -p _neovim
            curl -sL ${{ matrix.nvim_url }} | tar xzf - --strip-components=1 -C "${PWD}/_neovim"
          }
          git clone --depth 1 ${{ env.plenary-git }} ${{ env.plenary-path }}
          git clone --depth 1 ${{ env.sqlite-git }} ${{ env.sqlite-path }}
          ln -s $(pwd) ${{ env.runtime }}

      - name: Prepare
        if: ${{ matrix.task.prepare }}
        run: ${{ matrix.task.prepare }}

      - name: ${{ matrix.task.name }}
        run: |
          export PATH="${PWD}/_neovim/bin:${PATH}"
          export VIM="${PWD}/_neovim/share/nvim/runtime"
          nvim --version
          ${{ matrix.task.run }}
